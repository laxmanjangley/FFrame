{
  "name": "FFrame",
  "tagline": "transformer-featurefu-wrapper",
  "body": "FFrame\r\n======\r\nexpression-transformer in spark\r\n\r\n----------------\r\nThis transformer is designed with the goal of making feature engineering simpler. It facilitates easy feature specification and improved code reusablity\r\n\r\n\r\nCurrent Status\r\n--------------\r\nCurrently the transformer works with prefix expressions:\r\n- N-ary operands\r\n- Nesting is allowed\r\n- Works with any data type\r\n- List of expressions to be worked on can be specified using a file\r\n\r\n\r\nEvaluation function can be user specified:\r\n- Can allow for more diverse expressions\r\n- Type inferencing can also be done at the user level to make the transformer more airtight.\r\n\r\n\r\nApi\r\n---------\r\n````scala\r\n\r\nval lines = Source.fromFile(path_to_your_input_file).getLines.toSeq.map(l => (l.split('=')(0).trim, l.split('=')(1).trim))\r\n\r\ntype Environment = Map[String, Object]\r\nvar env: Environment = Map()\r\n\r\nval ff = new ExprEval()\r\n  .setFunction(parse(env) ) //the parsing function (type is (Array[(Object, Object)]) =>  (Map[String, Object]) => Object)\r\n  .setInputCols(seq_of_your_input_cols)\r\n  .setNumFeatures(#cols_in_your_dataframe)\r\n  .setTt(tokenize) //tokenizer for your parser (type is String => Array[(Object, Object)])\r\n  .setoutputTuples(lines) // seq containing (output_column, expression) tuples\r\n\r\nff.transform(your_dataframe)\r\n````\r\n\r\n\r\nCoding Style\r\n------------\r\n\r\n\r\n\r\n\r\nLicense\r\n-------\r\nThis is free and unencumbered software released into the public domain.\r\n\r\nAnyone is free to copy, modify, publish, use, compile, sell, or\r\ndistribute this software, either in source code form or as a compiled\r\nbinary, for any purpose, commercial or non-commercial, and by any\r\nmeans.\r\n\r\nIn jurisdictions that recognize copyright laws, the author or authors\r\nof this software dedicate any and all copyright interest in the\r\nsoftware to the public domain. We make this dedication for the benefit\r\nof the public at large and to the detriment of our heirs and\r\nsuccessors. We intend this dedication to be an overt act of\r\nrelinquishment in perpetuity of all present and future rights to this\r\nsoftware under copyright law.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\nIN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR\r\nOTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\r\nARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\r\nOTHER DEALINGS IN THE SOFTWARE.\r\n\r\n\r\nIssues\r\n------\r\nTyping has not been handled in a proper way.\r\n\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}